def is_prime(n)
    return false if n < 2
    return true if n == 2
    return false if n % 2 == 0
    (3...Math.sqrt(n).to_i + 1).step(2).each do |i|
        return false if n % i == 0
    end
    true
end

def circular_primes(n)
    count = 0
    (2...n).each do |i|
        if is_prime(i)
            rotations = Set.new
            (0...i.to_s.length).each do |j|
                rotations.add(i.to_s[j..-1] + i.to_s[0...j].to_i)
            end
            flag = true
            rotations.each do |x|
                if not is_prime(x)
                    flag = false
                    break
                end
            end
            if flag
                count += 1
            end
        end
    end
    count
end

def is_prime(n: int) -> bool:
    if n < 2:
        return False
    if n == 2:
        return True
    if n % 2 == 0:
        return False
    for i in range(3, int(math.sqrt(n)) + 1, 2):
        if n % i == 0:
            return False
    return True

def quadratic_primes(n: int) -> int:
    max_primes = 0
    result = 0
    for a in range(-n + 1, n, 2):
        for b in range(-n + 1, n, 2):
            x = 0
            while x*x+a*x+b < 2:
                if not is_prime(x*x+a*x+b):
                    break
                x += 1
            if x > max_primes:
                max_primes = x
                result = a * b
    return result

def is_prime(n: int) -> bool:
    if n < 2:
        return False
    if n == 2:
        return True
    if n % 2 == 0:
        return False
    for i in range(3, int(math.sqrt(n)) + 1, 2):
        if n % i == 0:
            return False
    return True

def circular_primes(n: int) -> int:
    count = 0
    for i in range(2, n):
        if is_prime(i):
            rotations = set()
            str = str(i)
            for j in range(len(str)):
                x = int(str[j:] + str[:j])
                rotations.add(x)
            flag = True
            for x in rotations:
                if not is_prime(x):
                    flag = False
                    break
            if flag:
                count += 1
    return count

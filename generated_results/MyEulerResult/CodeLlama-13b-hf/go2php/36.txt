function isPrime($n) {
    if ($n < 2) {
        return false;
    }
    if ($n == 2) {
        return true;
    }
    if ($n % 2 == 0) {
        return false;
    }
    for ($i = 3; $i <= intval(sqrt($n)); $i += 2) {
        if ($n % $i == 0) {
            return false;
        }
    }
    return true;
}

function truncatablePrimes($n) {
    $result = 0;
    for ($i = 10; $i < $n; $i++) {
        if (isPrime($i)) {
            $si = strval($i);
            $flag = true;
            for ($j = 1; $j < strlen($si); $j++) {
                $p1 = intval(substr($si, $j));
                $p2 = intval(substr($si, 0, strlen($si) - $j));
                if (!isPrime($p1) || !isPrime($p2)) {
                    $flag = false;
                    break;
                }
            }
            if ($flag) {
                $result += $i;
            }
        }
    }
    return $result;
}

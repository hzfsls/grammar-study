func ReciprocalCycles(n int) int {
    result := 0
    maxLength := 0
    for i := 1; i < n; i++ {
        remainders := []int{}
        remainder := 1
        for remainder != 0 && !contains(remainders, remainder) {
            remainders = append(remainders, remainder)
            remainder = (remainder * 10) % i
        }
        length := 0
        if remainder != 0 {
            length = len(remainders) - indexOf(remainders, remainder)
        }
        if length > maxLength {
            maxLength = length
            result = i
        }
    }
    return result
}

func contains(s []int, e int) bool {
    for _, a := range s {
        if a == e {
            return true
        }
    }
    return false
}

func indexOf(s []int, e int) int {
    for i, a := range s {
        if a == e {
            return i
        }
    }
    return -1
}

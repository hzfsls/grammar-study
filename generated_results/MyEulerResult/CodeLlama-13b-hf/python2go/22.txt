func IsAbundant(n int) bool {
    if n < 12 {
        return false
    }
    sumDivisors := 1
    for i := 2; i <= int(math.Sqrt(float64(n)))+1; i++ {
        if n%i == 0 {
            sumDivisors += i
            if i != n/i {
                sumDivisors += n / i
            }
        }
    }
    return sumDivisors > n
}

func NonAbundantSums(n int) int {
    abundants := []int{}
    for i := 12; i < n; i++ {
        if IsAbundant(i) {
            abundants = append(abundants, i)
        }
    }
    abundantSums := map[int]bool{}
    for _, i := range abundants {
        for _, j := range abundants {
            abundantSums[i+j] = true
        }
    }
    result := 0
    for i := 0; i < n; i++ {
        if !abundantSums[i] {
            result += i
        }
    }
    return result
}

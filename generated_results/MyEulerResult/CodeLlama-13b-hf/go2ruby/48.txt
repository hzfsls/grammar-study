def is_prime(n)
    return false if n < 2
    return true if n == 2
    return false if n % 2 == 0
    for i in 3..Math.sqrt(n).to_i
        return false if n % i == 0
    end
    true
end

def gen_permutations(s)
    return [s] if s.length <= 1
    result = []
    gen_permutations(s[1..-1]).each do |perm|
        (0...s.length).each do |i|
            result.push(perm[0...i] + s[0] + perm[i..-1])
        end
    end
    result
end

def prime_permutations(n)
    for i in n..999
        if is_prime(i)
            permutations = gen_permutations(i.to_s)
            candidates = {}
            permutations.each do |j|
                candidate = j.to_i
                if candidate > i && is_prime(candidate)
                    candidates[candidate] = true
                end
            end
            candidates.each do |m, _|
                if candidates[m + (m - i)]
                    return i.to_s + m.to_s + (m + (m - i)).to_s
                end
            end
        end
    end
    ""
end

def isAbundant(n: Int): Boolean = {
  if (n < 12) {
    return false
  }
  var sumDivisors = 1
  for (i <- 2 to math.sqrt(n).toInt + 1) {
    if (n % i == 0) {
      sumDivisors += i
      if (i != n / i) {
        sumDivisors += n / i
      }
    }
  }
  sumDivisors > n
}

def nonAbundantSums(n: Int): Int = {
  val abundants = collection.mutable.ArrayBuffer[Int]()
  for (i <- 12 until n) {
    if (isAbundant(i)) {
      abundants += i
    }
  }
  val abundantSums = collection.mutable.Set[Int]()
  for (i <- abundants) {
    for (j <- abundants) {
      abundantSums += i + j
    }
  }
  var result = 0
  for (i <- 0 until n) {
    if (!abundantSums.contains(i)) {
      result += i
    }
  }
  result
}

fn is_palindrome(s: &String) -> bool {
    let mut i = 0;
    let mut j = s.len() - 1;
    while i < j {
        if s.chars().nth(i).unwrap() != s.chars().nth(j).unwrap() {
            return false;
        }
        i += 1;
        j -= 1;
    }
    true
}

fn largest_palindrome_product(n: i32) -> i32 {
    let mut result = 0;
    for i in 100..1000 {
        for j in i..1000 {
            let prod = i * j;
            if is_palindrome(&prod.to_string()) && prod > result && prod < n {
                result = prod;
            }
        }
    }
    result
}

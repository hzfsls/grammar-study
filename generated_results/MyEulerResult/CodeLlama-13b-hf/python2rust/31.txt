fn pandigital_products(n: i32) -> i32 {
    let mut products = HashSet::new();
    let s = (1..n+1).map(|i| i.to_string()).collect::<String>();
    for a in 1..100 {
        for b in 1..10000 {
            let c = a * b;
            let mut chars = vec![a.to_string(), b.to_string(), c.to_string()];
            chars.sort();
            if chars.iter().collect::<String>() == s {
                products.insert(c);
            }
        }
    }
    let mut result = 0;
    for product in products {
        result += product;
    }
    result
}

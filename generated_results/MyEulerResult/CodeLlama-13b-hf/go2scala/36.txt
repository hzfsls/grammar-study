def isPrime(n: Int): Boolean = {
  if (n < 2) {
    return false
  }
  if (n == 2) {
    return true
  }
  if (n % 2 == 0) {
    return false
  }
  for (i <- 3 to math.sqrt(n).toInt by 2) {
    if (n % i == 0) {
      return false
    }
  }
  true
}

def truncatablePrimes(n: Int): Int = {
  var result = 0
  for (i <- 10 until n) {
    if (isPrime(i)) {
      si = i.toString
      flag = true
      for (j <- 1 until si.length) {
        p1 = si.substring(j).toInt
        p2 = si.substring(0, si.length - j).toInt
        if (!isPrime(p1) || !isPrime(p2)) {
          flag = false
          break
        }
      }
      if (flag) {
        result += i
      }
    }
  }
  result
}

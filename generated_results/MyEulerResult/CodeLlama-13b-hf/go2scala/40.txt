def isPrime(n: Int): Boolean = {
  if (n < 2) {
    return false
  }
  if (n == 2) {
    return true
  }
  if (n % 2 == 0) {
    return false
  }
  for (i <- 3 to math.sqrt(n).toInt by 2) {
    if (n % i == 0) {
      return false
    }
  }
  true
}

def pandigitalPrime(n: Int): Int = {
  for (i <- n - 1 to 1 by -1) {
    if (isPrime(i)) {
      val si = i.toString
      val length = si.length
      var flag = true
      for (j <- 1 to length) {
        if (!si.contains(j.toString)) {
          flag = false
          break
        }
      }
      if (flag) {
        return i
      }
    }
  }
  -1
}

bool isPrime(int n) {
    if (n < 2) {
        return false;
    }
    if (n == 2) {
        return true;
    }
    if (n % 2 == 0) {
        return false;
    }
    for (int i = 3; i <= sqrt(n); i += 2) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}

int circularPrimes(int n) {
    int count = 0;
    for (int i = 2; i < n; i++) {
        if (isPrime(i)) {
            set<int> rotations;
            for (int j = 0; j < to_string(i).size(); j++) {
                rotations.insert(stoi(to_string(i).substr(j) + to_string(i).substr(0, j)));
            }
            bool flag = true;
            for (int x : rotations) {
                if (!isPrime(x)) {
                    flag = false;
                    break;
                }
            }
            if (flag) {
                count++;
            }
        }
    }
    return count;
}

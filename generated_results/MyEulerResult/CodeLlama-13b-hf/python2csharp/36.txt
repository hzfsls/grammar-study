class Global {
    public static bool IsPrime(int n) {
        if (n < 2) {
            return false;
        }
        if (n == 2) {
            return true;
        }
        if (n % 2 == 0) {
            return false;
        }
        for (int i = 3; i <= (int)Math.Sqrt(n) + 1; i += 2) {
            if (n % i == 0) {
                return false;
            }
        }
        return true;
    }

    public static int TruncatablePrimes(int n) {
        int result = 0;
        for (int i = 10; i < n; i++) {
            if (IsPrime(i)) {
                string si = i.ToString();
                bool flag = true;
                for (int j = 1; j < si.Length; j++) {
                    int p1 = int.Parse(si.Substring(j));
                    int p2 = int.Parse(si.Substring(0, si.Length - j));
                    if (!IsPrime(p1) || !IsPrime(p2)) {
                        flag = false;
                        break;
                    }
                }
                if (flag) {
                    result += i;
                }
            }
        }
        return result;
    }
}

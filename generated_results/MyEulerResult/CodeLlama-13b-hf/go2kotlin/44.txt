fun triangularPentagonalAndHexagonal(n: Int): Int {
    val ps = mutableMapOf<Int, Boolean>()
    var i = 1
    var c = (0.5 * i * (3 * i - 1)).toInt()
    while (c < n) {
        i++
        ps[c] = true
        c = (0.5 * i * (3 * i - 1)).toInt()
    }
    i = 1
    c = i * (2 * i - 1)
    var result = -1
    while (c < n) {
        i++
        if (ps[c]!!) {
            result = c
        }
        c = i * (2 * i - 1)
    }
    return result
}

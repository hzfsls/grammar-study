int consecutivePrimeSum(int limit) {
    vector<bool> sieve(limit);
    for (int i = 0; i < limit; i++) {
        sieve[i] = true;
    }
    vector<int> primes;
    for (int i = 2; i < limit; i++) {
        if (sieve[i]) {
            primes.push_back(i);
            for (int j = i * 2; j < limit; j += i) {
                sieve[j] = false;
            }
        }
    }
    int maxLength = 0;
    int maxPrime = 0;
    for (int i = 0; i < primes.size(); i++) {
        for (int j = i + maxLength; j < primes.size(); j++) {
            int s = 0;
            for (int k = i; k < j; k++) {
                s += primes[k];
            }
            if (s >= limit) {
                break;
            }
            if (sieve[s] && j - i > maxLength) {
                maxLength = j - i;
                maxPrime = s;
            }
        }
    }
    return maxPrime;
}

fun isPrime(n: Int): Boolean {
    if (n < 2) {
        return false
    }
    if (n == 2) {
        return true
    }
    if (n % 2 == 0) {
        return false
    }
    for (i in 3 until sqrt(n).toInt() step 2) {
        if (n % i == 0) {
            return false
        }
    }
    return true
}

fun pandigitalPrime(n: Int): Int {
    for (i in n downTo 1) {
        if (isPrime(i)) {
            val si = i.toString()
            val length = si.length
            var flag = true
            for (j in 1..length) {
                if (j.toString()!in si) {
                    flag = false
                    break
                }
            }
            if (flag) {
                return i
            }
        }
    }
    return -1
}

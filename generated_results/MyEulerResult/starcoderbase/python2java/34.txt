class Global {
    public static boolean isPrime(int n) {
        if (n < 2) {
            return false;
        }
        if (n == 2) {
            return true;
        }
        if (n % 2 == 0) {
            return false;
        }
        for (int i = 3; i <= Math.sqrt(n); i += 2) {
            if (n % i == 0) {
                return false;
            }
        }
        return true;
    }

    public static int circularPrimes(int n) {
        int count = 0;
        for (int i = 2; i < n; i++) {
            if (isPrime(i)) {
                Set<Integer> rotations = new HashSet<>();
                for (int j = 0; j < String.valueOf(i).length(); j++) {
                    rotations.add(Integer.parseInt(String.valueOf(i).substring(j) + String.valueOf(i).substring(0, j)));
                }
                boolean flag = true;
                for (int x : rotations) {
                    if (!isPrime(x)) {
                        flag = false;
                        break;
                    }
                }
                if (flag) {
                    count++;
                }
            }
        }
        return count;
    }
}

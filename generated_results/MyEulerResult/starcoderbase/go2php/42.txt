function genPermutations($s) {
    if (strlen($s) <= 1) {
        return [$s];
    }
    $result = [];
    foreach (genPermutations(substr($s, 1)) as $perm) {
        for ($i = 0; $i < strlen($s); $i++) {
            array_push($result, $perm. substr($s, 0, $i). $s[0]. substr($perm, $i));
        }
    }
    return $result;
}

function subStringDivisibility($n) {
    $result = 0;
    $primes = [2, 3, 5, 7, 11, 13, 17];
    $s = "";
    for ($i = 0; $i <= $n; $i++) {
        $s.= strval($i);
    }
    foreach (genPermutations($s) as $i) {
        $flag = true;
        for ($j = 1; $j < $n - 1; $j++) {
            if (intval(substr($i, $j, 3)) % $primes[$j - 1]!== 0) {
                $flag = false;
                break;
            }
        }
        if ($flag) {
            $result += intval($i);
        }
    }
    return $result;
}

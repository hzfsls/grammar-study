def is_prime(n)
    if n < 2
        return false
    end
    if n == 2
        return true
    end
    if n % 2 == 0
        return false
    end
    for i in 3..Math.sqrt(n).to_i
        if n % i == 0
            return false
        end
    end
    return true
end

def circular_primes(n)
    count = 0
    (2...n).each do |i|
        if is_prime(i)
            rotations = {}
            str = i.to_s
            (0...str.length).each do |j|
                x, _ = str[j..-1] + str[0...j].to_s
                rotations[x.to_i] = nil
            end
            flag = true
            rotations.each do |x|
                if!is_prime(x)
                    flag = false
                    break
                end
            end
            if flag
                count += 1
            end
        end
    end
    count
end

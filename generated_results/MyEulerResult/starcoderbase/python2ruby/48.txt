def is_prime(n)
    if n < 2
        return false
    end
    if n == 2
        return true
    end
    if n % 2 == 0
        return false
    end
    (3...(Math.sqrt(n).to_i + 1)).step(2) do |i|
        if n % i == 0
            return false
        end
    end
    return true
end

def gen_permutations(s)
    if s.length <= 1
        return s
    end
    result = []
    gen_permutations(s[1..-1]).each do |perm|
        (0...s.length).each do |i|
            result.push(perm[0...i] + s[0:1] + perm[i..-1])
        end
    end
    result
end

def prime_permutations(n)
    (n...999).step(-1) do |i|
        if is_prime(i)
            permutations = gen_permutations(i.to_s)
            candidates = Set.new
            permutations.each do |j|
                candidate = j.to_i
                if candidate > i && is_prime(candidate)
                    candidates.add(candidate)
                end
            end
            candidates.each do |m|
                if m + (m - i) in candidates
                    return i.to_s + m.to_s + (m + (m - i)).to_s
                end
            end
        end
    end
    ''
end

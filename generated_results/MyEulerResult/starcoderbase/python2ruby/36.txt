def is_prime(n)
    if n < 2
        return false
    end
    if n == 2
        return true
    end
    if n % 2 == 0
        return false
    end
    (3...Math.sqrt(n)).step(2) do |i|
        if n % i == 0
            return false
        end
    end
    return true
end

def truncatable_primes(n)
    result = 0
    (10...n).each do |i|
        if is_prime(i)
            si = i.to_s
            flag = true
            (1...si.length).each do |j|
                p1 = si[j..-1].to_i
                p2 = si[0...j].to_i
                if not is_prime(p1) or not is_prime(p2)
                    flag = false
                    break
                end
            end
            if flag
                result += i
            end
        end
    end
    result
end

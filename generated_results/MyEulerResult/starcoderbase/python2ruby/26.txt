def is_prime(n)
    if n < 2
        return false
    end
    if n == 2
        return true
    end
    if n % 2 == 0
        return false
    end
    (3...(Math.sqrt(n).to_i + 1)).step(2) do |i|
        if n % i == 0
            return false
        end
    end
    true
end

def quadratic_primes(n)
    max_primes = 0
    result = 0
    (-n + 1...n).step(2) do |a|
        (-n + 1...n).step(2) do |b|
            x = 0
            while true
                if x * x + a * x + b < 2
                    break
                end
                if not is_prime(x * x + a * x + b)
                    break
                end
                x += 1
            end
            if x > max_primes
                max_primes = x
                result = a * b
            end
        end
    end
    result
end

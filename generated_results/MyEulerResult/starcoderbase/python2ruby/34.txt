def is_prime(n)
    if n < 2
        return false
    end
    if n == 2
        return true
    end
    if n % 2 == 0
        return false
    end
    (3...Math.sqrt(n)).step(2) do |i|
        if n % i == 0
            return false
        end
    end
    return true
end

def circular_primes(n)
    count = 0
    (2...n).each do |i|
        if is_prime(i)
            rotations = Set.new
            (0...(str(i).length)).each do |j|
                rotations.add(str(i)[j..-1] + str(i)[0...j])
            end
            flag = true
            rotations.each do |x|
                if not is_prime(x.to_i)
                    flag = false
                    break
                end
            end
            if flag
                count += 1
            end
        end
    end
    count
end

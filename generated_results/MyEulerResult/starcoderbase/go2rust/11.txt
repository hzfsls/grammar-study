fn highly_divisible_triangular_number(n: i32) -> i32 {
    for i in 1..100000000 {
        let result = i * (i + 1) / 2;
        let mut count = 0;
        for j in 1..(result as f64).sqrt() as i32 + 1 {
            if result % j == 0 {
                count += 2;
            }
            if j * j == result {
                count -= 1;
            }
        }
        if count > n {
            return result;
        }
    }
    -1
}

func IsPrime(n int) bool {
    if n < 2 {
        return false
    }
    if n == 2 {
        return true
    }
    if n % 2 == 0 {
        return false
    }
    for i := 3; i <= int(math.Sqrt(float64(n))); i += 2 {
        if n % i == 0 {
            return false
        }
    }
    return true
}

func GoldbachsOtherConjecture(n int) int {
    result := -1
    for i := 9999; i >= n; i -= 2 {
        upper := int(math.Sqrt(float64(i / 2)))
        flag := false
        for j := 0; j <= upper; j++ {
            if IsPrime(i - 2 * j * j) {
                flag = true
                break
            }
        }
        if!flag {
            result = i
        }
    }
    return result
}

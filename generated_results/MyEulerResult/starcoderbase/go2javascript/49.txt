const consecutivePrimeSum = (limit) => {
    let sieve = new Array(limit).fill(true);
    let primes = [];
    for (let i = 2; i < limit; i++) {
        if (sieve[i]) {
            primes.push(i);
            for (let j = i * 2; j < limit; j += i) {
                sieve[j] = false;
            }
        }
    }
    let maxLength = 0;
    let maxPrime = 0;
    for (let i = 0; i < primes.length; i++) {
        for (let j = i + maxLength; j < primes.length; j++) {
            let s = 0;
            for (let k = i; k < j; k++) {
                s += primes[k];
            }
            if (s >= limit) {
                break;
            }
            if (sieve[s] && j - i > maxLength) {
                maxLength = j - i;
                maxPrime = s;
            }
        }
    }
    return maxPrime;
}

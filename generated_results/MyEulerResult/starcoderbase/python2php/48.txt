function isPrime($n) {
    if ($n < 2) {
        return false;
    }
    if ($n === 2) {
        return true;
    }
    if ($n % 2 === 0) {
        return false;
    }
    for ($i = 3; $i <= intval(sqrt($n)); $i += 2) {
        if ($n % $i === 0) {
            return false;
        }
    }
    return true;
}

function genPermutations($s) {
    if (strlen($s) <= 1) {
        return $s;
    }
    $result = [];
    foreach (genPermutations(substr($s, 1)) as $perm) {
        for ($i = 0; $i < strlen($s); $i++) {
            array_push($result, $perm. substr($s, 0, 1). substr($perm, $i));
        }
    }
    return $result;
}

function primePermutations($n) {
    for ($i = $n; $i >= 999; $i -= 1) {
        if (isPrime($i)) {
            $permutations = genPermutations(strval($i));
            $candidates = [];
            foreach ($permutations as $j) {
                $candidate = intval($j);
                if ($candidate > $i && isPrime($candidate)) {
                    array_push($candidates, $candidate);
                }
            }
            foreach ($candidates as $m) {
                if ($m + ($m - $i) in $candidates) {
                    return strval($i). strval($m). strval($m + ($m - $i));
                }
            }
        }
    }
    return '';
}

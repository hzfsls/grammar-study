function isPrime($n) {
    if ($n < 2) {
        return false;
    }
    if ($n === 2) {
        return true;
    }
    if ($n % 2 === 0) {
        return false;
    }
    for ($i = 3; $i <= intval(sqrt($n)); $i += 2) {
        if ($n % $i === 0) {
            return false;
        }
    }
    return true;
}

function circularPrimes($n) {
    $count = 0;
    for ($i = 2; $i <= $n; $i++) {
        if (isPrime($i)) {
            $rotations = [];
            for ($j = 0; $j < strlen(strval($i)); $j++) {
                array_push($rotations, intval(substr(strval($i), $j). substr(strval($i), 0, $j)));
            }
            $flag = true;
            foreach ($rotations as $x) {
                if (!isPrime($x)) {
                    $flag = false;
                    break;
                }
            }
            if ($flag) {
                $count++;
            }
        }
    }
    return $count;
}

def triangularPentagonalAndHexagonal(n: Int): Int = {
  val ps = collection.mutable.Map[Int, Boolean]()
  var i = 1
  var c = (i * (3 * i - 1)) / 2
  while (c < n) {
    i += 1
    ps(c) = true
    c = (i * (3 * i - 1)) / 2
  }
  i = 1
  c = i * (2 * i - 1)
  var result = -1
  while (c < n) {
    i += 1
    if (ps(c)) {
      result = c
    }
    c = i * (2 * i - 1)
  }
  result
}
